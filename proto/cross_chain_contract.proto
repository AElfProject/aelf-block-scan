syntax = "proto3";

import "common.proto";
import "kernel.proto";
import "aelf_options.proto";
import "crosschain.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

option csharp_namespace = "AElf.Contracts.CrossChain";

service CrossChainContract {
    option (aelf.csharp_state) = "AElf.Contracts.CrossChain.CrossChainContractState";
    // Actions
    rpc Initialize (InitializeInput) returns (google.protobuf.Empty) {
    }
    rpc RequestChainCreation (SideChainInfo) returns (SInt32Value) {
    }
    rpc WithdrawRequest (SInt32Value) returns (google.protobuf.Empty) {
    }
    rpc CreateSideChain (SInt32Value) returns (SInt32Value) {
    }
    rpc Recharge (RechargeInput) returns (google.protobuf.Empty) {
    }
    rpc RequestChainDisposal (SInt32Value) returns (google.protobuf.Empty) {
    }
    rpc DisposeSideChain (SInt32Value) returns (SInt64Value) {
    }
    rpc RecordCrossChainData (CrossChainBlockData) returns (google.protobuf.Empty) {
    }

    // Views
    rpc VerifyTransaction (VerifyTransactionInput) returns (google.protobuf.BoolValue) {
        option (aelf.is_view) = true;
    } 
    rpc CurrentSideChainSerialNumber (google.protobuf.Empty) returns (SInt64Value) {
        option (aelf.is_view) = true;
    }
    rpc LockedToken (SInt32Value) returns (SInt64Value) {
        option (aelf.is_view) = true;
    }
    rpc LockedAddress (SInt32Value) returns (Address) {
        option (aelf.is_view) = true;
    }
    rpc GetChainStatus (SInt32Value) returns (SInt32Value) {
        option (aelf.is_view) = true;
    }
    rpc GetSideChainHeight (SInt32Value) returns (SInt64Value) {
        option (aelf.is_view) = true;
    }
    rpc GetParentChainHeight (google.protobuf.Empty) returns (SInt64Value) {
        option (aelf.is_view) = true;
    }
    rpc GetParentChainId (google.protobuf.Empty) returns (SInt32Value) {
        option (aelf.is_view) = true;
    }
    rpc LockedBalance (SInt32Value) returns (SInt64Value) {
        option (aelf.is_view) = true;
    }
    rpc GetSideChainIdAndHeight (google.protobuf.Empty) returns (SideChainIdAndHeightDict) {
        option (aelf.is_view) = true;
    }
    rpc GetAllChainsIdAndHeight (google.protobuf.Empty) returns (SideChainIdAndHeightDict) {
        option (aelf.is_view) = true;
    }
    rpc GetIndexedCrossChainBlockDataByHeight (SInt64Value) returns (CrossChainBlockData) {
        option (aelf.is_view) = true;
    }
    rpc GetBoundParentChainHeightAndMerklePathByHeight (SInt64Value) returns (CrossChainMerkleProofContext) {
        option (aelf.is_view) = true;
    }
}

message InitializeInput {
    Hash tokenContractSystemName = 1;
    Hash consensusContractSystemName = 2;
    int32 parentChainId = 3;
}

message RechargeInput {
    int32 chainId = 1;
    sint64 amount = 2;
}

message VerifyTransactionInput {
    Hash transactionId = 1;
    repeated Hash path = 2;
    sint64 parentChainHeight = 3;
    int32 verifiedChainId = 4; 
}

// Events
message CreationRequested
{
    option (aelf.is_event) = true;
    Address creator = 1;
    int32 chainId = 2;
}

message Disposed
{
    option (aelf.is_event) = true;
    int32 chainId = 1;
}
